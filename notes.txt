Introduction
-----------------------------
react vs nextjs
react - a js library to create UIs
nextjs - upgraded version of react, it has extra features



SSR
db --> get data --> HCJ        ------->     browser  -> paint
                    (template)


CSR
db --> get data --> api      --------->     HCJ             -> browser -> paint
                                            (template)



cons of react:
    1. no built-in router
    2. seo problems


pros of nextjs:
    1. built-in router
    2. efficient seo
    3. built-in optimization
    4. supports both SSR and CSR


cons of csr:
    1. slow api calls
    2. seo issue
    3. may slow in older device

cons of ssr:
    1. heavy server load
    2. slow initial load


when to go with CSR and SSR


server comopnent vs client component




data fetching
-------------------------
1. SSG - Static Site Generation
fetches data once at build time
Blogs, FAQs

2. SSR - Server Side Rendering
fetches fresh data on every request
User dashboards, stock prices

3. ISR - Incremental Site Regeneration
fetches data at build time, updates after X seconds
Products listing, news, merit list

4. CSR - Client Side Rendering
fetches data after page loads
live chat, client-side filtering





blog system
----------------------------
where user can view a list of blog posts and click on a post to see its full details.

application should have:
1. Homepae (/) - displays a list of blog posts with links
2. Blog Detail Page (/blog/[id]) - loads content based on the post id
3. Navigation using <Link />
4. Programmatic Navigation (useRouter()) - Back to home button
5. Global Layout (layout.js) - Common Navbar across all pages





Layouts and Styling
-------------------------------
grid
flex
position - static, relative, absolute, fixed and sticky
flow - display: inline, block and inline-block
float


ways
----
1. global css ✅
2. inline css ✅
<h1 style={{color: "blue", bg-color: "red"}}>...</h1>
3. module css   ✅
4. styled components (css-in-js)    ✅
5. external libraries / frameworks
bootstrap
tailwind
material UI
shadcn
chakra ui




optimization
-------------------
1. image optimization
2. font optimization


database
    collection1
        document1
        document2
    collection2
        document1



authentication
cookies
session
iron-session

login click -> server creates session -> save encrypted cookie to browser
refresh -> browser send cookie -> server identifies -> you stay logged-in
logout click -> cookie delete -> session end